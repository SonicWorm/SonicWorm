const { ethers } = require('hardhat'); require('dotenv').config(); async function main() { const gameLogicAbi = require('./artifacts/contracts/GameLogicV2Simple.sol/SonicWormGameV2Simple.json').abi; const contractAddress = process.env.VITE_GAME_CONTRACT_ADDRESS_TESTNET; const provider = new ethers.JsonRpcProvider('https://rpc.blaze.soniclabs.com'); const signer = new ethers.Wallet(process.env.PRIVATE_KEY, provider); const gameContract = new ethers.Contract(contractAddress, gameLogicAbi, signer); console.log('🔧 Sıkışan 2 oyuncuyu kurtarıyor...'); const stuckPlayers = ['0x85146539B8b2aE8B37C1DB66D36ab45EF3657FB8', '0x52AEc2aDEbAcA9763348Bca790FcCd8d12CF7FB3']; for (let i = 0; i < stuckPlayers.length; i++) { const playerAddress = stuckPlayers[i]; console.log('🔄 ' + (i+1) + '/' + stuckPlayers.length + ' Kurtarılıyor: ' + playerAddress); try { const tx = await gameContract.adminEmergencyResetPlayer(playerAddress, { gasLimit: 300000, gasPrice: ethers.parseUnits('2', 'gwei') }); console.log('📝 Transaction: ' + tx.hash); await tx.wait(); console.log('✅ BAŞARILI\!'); const player = await gameContract.players(playerAddress); console.log('📊 Yeni durum: Lives=' + player.lives + ', Active=' + player.isActive + ', GameID=' + player.currentGameId); } catch (error) { console.log('❌ Hata: ' + error.message); } if (i < stuckPlayers.length - 1) await new Promise(resolve => setTimeout(resolve, 2000)); } console.log('🎉 Kurtarma tamamlandı\!'); } main().catch(console.error);
